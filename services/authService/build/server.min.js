/*notoja-auth_service - The following software is property of Notoja corp built on Fri Jul 12 2013 11:46:24function escapeEntities(a){return a.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function validateUsername(a){return a.length>0}function validateEmail(){new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,6}$/,i)}function validatePassword(a){return a.length>=6}function stripTrailingSlash(a){return"/"==a.substr(-1)?a.substr(0,a.length-1):a}var OAuth2Provider=require("oauth2-provider/index").OAuth2Provider,engine=require("ejs-locals"),express=require("express"),email=require("./lib/email"),fs=require("fs"),http=require("http"),https=require("https"),MemoryStore=express.session.MemoryStore,mongoose=require("mongoose"),models=require("./lib/models"),User=models.UserModel,settings=require("./config.json"),myClients={"notoja-frontend":"1secret"},myGrants={},myOAP=new OAuth2Provider({crypt_key:settings.security.oAuthCryptKey,sign_key:settings.security.oAuthSigningSecret}),app=express();app.use(express.logger()),app.use(express.bodyParser()),app.use(express.query()),app.use(express.cookieParser()),app.use(express.session({store:new MemoryStore({reapInterval:3e5}),secret:settings.security.sessionPassword})),app.use(myOAP.oauth()),app.set("view engine","ejs"),app.engine("ejs",engine),app.use(express.static(__dirname+"/public")),app.use(myOAP.login()),console.info("Running the Notoja Authentication Server on port "+settings.server.port),console.info("Making connection to the database at "+settings.server.mongooseServer),mongoose.connect(settings.server.mongooseServer);var db=mongoose.connection;db.on("error",console.error.bind(console,"connection error:")),db.once("open",function(){if(console.info("Successfully connected the the databse"),myOAP.on("enforce_login",function(a,b,c,d){a.session.user?d(a.session.user):(b.writeHead(303,{Location:"/login?next="+encodeURIComponent(c)}),b.end())}),myOAP.on("authorize_form",function(a,b,c,d){var e=a.query.next?a.query.next:"/";e=stripTrailingSlash(e),b.render("authorize.ejs",{authorize_url:d})}),myOAP.on("save_grant",function(a,b,c,d){a.session.user in myGrants||(myGrants[a.session.user]={}),myGrants[a.session.user][b]=c,d()}),myOAP.on("remove_grant",function(a,b){myGrants[a]&&myGrants[a][b]&&delete myGrants[a][b]}),myOAP.on("lookup_grant",function(a,b,c,d){if(a in myClients&&myClients[a]==b)for(var e in myGrants){var f=myGrants[e];if(f[a]&&f[a]==c)return d(null,e)}d(new Error("no such grant found"))}),myOAP.on("create_access_token",function(a,b,c){var d="blah";c(d)}),myOAP.on("save_access_token",function(){}),myOAP.on("access_token",function(a,b,c){var d=6e5;b.grant_date.getTime()+d>Date.now()&&(a.session.user=b.user_id,a.session.data=b.extra_data),c()}),myOAP.on("client_auth",function(a,b,c,d,e){if("1"==a&&"guest"==c){var f="1337";return e(null,f)}return e(new Error("client authentication denied"))}),app.get("/",function(a,b){console.dir(a.session),b.end("home, logged in? "+!!a.session.user)}),app.get("/login",function(a,b){if(a.session.user)return b.writeHead(303,{Location:"/"}),b.end();var c=a.query.next?a.query.next:"/";c=stripTrailingSlash(c),b.render("login.ejs",{next_url:c})}),app.post("/login",function(a,b){"emarcoux"==a.body.username?(b.writeHead(303,{Location:a.body.next||"/"}),a.session.user=a.body.username,b.end()):(b.writeHead(303,{Location:"/login"}),b.end())}),app.get("/logout",function(a,b){a.session.destroy(function(){b.writeHead(303,{Location:"/"}),b.end()})}),app.get("/api/auth_test",function(a,b){a.session.user?b.end(JSON.stringify({valid:!0})):b.end(JSON.stringify({valid:!1}))}),app.get("/api/user/get_user_info",function(a,b){a.session.user?b.end(JSON.stringify({fullName:a.session.user})):b.writeHead(403)}),app.get("/app/:appPath/*",function(a,b){""===a.params[0]&&(a.params[0]="index.html"),http.get("http://local.notoja.com:4000/apps/"+a.params.appPath+"/"+a.params[0],function(a){a.on("data",function(a){b.end(a)})})}),app.get("/api/logout",function(a,b){a.session.destroy(function(){b.end(JSON.stringify({success:!0}))})}),app.post("/api/user/create",function(a,b){var c=new User({username:a.body.username,email:a.body.email,password:a.body.password});validateEmail(c.email)&&validateUsername(c.username)&&validatePassword(c.password)?(c[activationKey]=c.generateActivationKey(),c.save(function(a){a&&console.log("User save failed");var b=settings.server.activationEmail,d={sender:b,to:c.email,subject:settings.server.activationSubject,activationKey:c.activationKey};email("activation",d)})):b.end("Invalid input")}),settings.security.ssl.enable===!0){console.info("Running in SSL Protected mode: "),console.info("Using SSL Key "+settings.security.ssl.key),console.info("Using SSL cert "+settings.security.ssl.cert);var a={key:fs.readFileSync(settings.security.ssl.key),cert:fs.readFileSync(settings.security.ssl.cert)};https.createServer(a,app).listen(settings.server.port)}else console.info("Running in plaintext mode"),http.createServer(app).listen(settings.server.port)});