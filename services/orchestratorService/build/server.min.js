/*! notoja-orchestrator_service 2013-07-26 */
function parseConfigurationFile(){if(!fs.existsSync("./ServerConfiguration.json"))throw new Error("Server configuration file has not been specified. I am checking process.env.SERVERCONF");var a=fs.readFileSync("./ServerConfiguration.json","utf8");a=JSON.parse(a),dbService.init(a.dbService,"OrchestratorService"),runners.init(a.dbService),applications.init(a.dbService,runners),bareMetalList=a.bareMetalMachines}function spawnRunner(a){a&&runners.removeRunner(a);var b=bareMetalList[currentRoundRobinIndex],c=new SSHClient(b.ip,b.username,b.password);c.exec("node "+b.runnerLocation),runners.add("ID","someName","http://"+b.ip+":"+b.runnerPort),currentRoundRobinIndex++,currentRoundRobinIndex>=bareMetalList.length&&(currentRoundRobinIndex=0),console.log("done!")}function monitorRunners(){runnerList&&runnerList.length>0?(new Date-runnerList[runnerIndex].ping>FIVE_MINUTES&&(console.log("runner "+runnerList[runnerIndex].id+" is dead. I am respawning it now."),runners.setAlive(runnerList[runnerIndex].id,!1),spawnRunner(runnerList[runnerIndex].id)),runnerIndex<runnerList.length-1?(runnerIndex=0,runnerIndex++):(runnerIndex=0,runnerList=runners.list())):spawnRunner(),setImmediate(monitorRunners)}function getAppDeploymentList(){}function deployAllApps(){}var express=require("express"),routes=require("./routes"),dbService=require("dbService"),runnersRoute=require("./routes/runnersRoute"),applicationsRoute=require("./routes/applicationsRoute"),runners=require("./runners"),applications=require("./applications"),http=require("http"),path=require("path"),SSHClient=require("NodeSSH");Expect=require("node-expect"),fs=require("fs");var app=express();app.set("port",process.env.PORT||3e3),app.set("views",__dirname+"/views"),app.use(express.favicon()),app.use(express.logger("dev")),app.use(express.bodyParser()),app.use(express.methodOverride()),app.use(app.router),applicationsRoute.init(runners,applications),runnersRoute.init(runners,applications),"development"==app.get("env")&&app.use(express.errorHandler()),parseConfigurationFile(),app.get("/",routes.index),app.get("/runners/list",runnersRoute.list),app.post("/runners/ping",runnersRoute.ping),app.post("/runners/add",runnersRoute.add),app.post("/applications/deploy",applicationsRoute.deploy),http.createServer(app).listen(app.get("port"),function(){console.log("Orchestrator Service listening on port "+app.get("port"))});var runnerList=runners.list(),appList=getAppDeploymentList(),bareMetalList,currentRoundRobinIndex=0;deployAllApps(appList);var runnerIndex=0,FIVE_MINUTES=2e4;monitorRunners();